{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","index.js"],"names":["Navbar","props","id","className","mode","href","title","type","onClick","toggleMode","role","style","color","htmlFor","TextForm","preview","document","getElementById","useState","text","setText","backgroundColor","outline","border","value","placeholder","onChange","event","target","rows","newText","toUpperCase","toLowerCase","fontWeight","navigator","clipboard","writeText","showAlert","split","filter","e","length","Alert","alert","message","defaultProps","App","setMode","setAlert","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9059d06.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav id=\"navbar\" className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link\" href=\"/about\">About</a> */}\r\n              </li>\r\n            </ul>\r\n            <div className=\"form-check form-switch\">\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" style={{color : props.mode === \"light\"?\"black\" : \"white\"}} htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>)\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Dev Singal\"\r\n}","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    let preview = document.getElementById(\"preview\");\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const handleToUpperCase = ()=>{\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    }\r\n\r\n    const handleToLowerCase = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleClearText = ()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const handleCopyText = ()=>{\r\n       navigator.clipboard.writeText(text);\r\n       props.showAlert(\"Copied to Clipboard!\", \"success\")\r\n    }\r\n\r\n    const handleBoldText = ()=>{\r\n        preview.style.fontWeight = \"bold\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 container\" style={{color : props.mode === 'light'?\"black\" : \"white\"}}>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label my-2\" ><h1>Enter and analize your text here</h1></label>\r\n                <textarea className=\"form-control\" style={{backgroundColor : props.mode === 'light'?\"white\" : \"rgb(33 37 41)\", color : props.mode === 'light'?\"black\":\"white\", outline:\"none\", border: props.mode === 'light'?\"1px solid black\" :\"none\"}} value={text} placeholder=\"Enter Your Text Here\" onChange={handleOnChange} id=\"textArea\" rows=\"8\"></textarea>\r\n\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleToUpperCase}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleToLowerCase}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleBoldText}>Bold your Text</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopyText}>Copy Text</button>\r\n                <button className=\"btn btn-primary my-3 mx-1\" onClick={handleClearText}>Clear Text</button>\r\n\r\n            </div>\r\n            <div className=\"container\" style={{color : props.mode === 'light'?\"black\" : \"white\"}}>\r\n                <h1>Summary of your Text</h1>\r\n                <p>No. of word = {text.split(/\\s/).filter((e)=>{return e.length !== 0}).length}  No. of Characters = {text.length}</p>\r\n\r\n                <h2>Preview</h2>\r\n                <p id=\"preview\">{text === ''?\"Enter your text above to preview it here\": text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n      props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {props.alert.message}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport Alert from './Components/Alert';\r\n// import About from './Components/About';\r\n\r\n\r\nfunction App(props) {\r\n\r\n    const [mode, setMode] = useState(\"light\");\r\n\r\n    const [alert, setAlert] = useState(null);\r\n    const showAlert = (message, type) => {\r\n        setAlert({\r\n            message: message,\r\n            type: type\r\n        });\r\n        setTimeout(() => {\r\n            setAlert(null)\r\n        }, 2000);\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (mode === 'light') {\r\n            setMode('dark');\r\n            document.body.style.backgroundColor = \"#0e0e0e\";\r\n            showAlert(\"Dark Mode enabled\", \"success\");\r\n        } else {\r\n            setMode('light')\r\n            document.body.style.backgroundColor = \"white\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar title=\"Text Master\" mode={mode} toggleMode={toggleMode} />\r\n            <Alert alert={alert} />\r\n\r\n            {/* <About mode={mode} /> */}\r\n            <TextForm showAlert={showAlert} mode={mode} />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)"],"sourceRoot":""}